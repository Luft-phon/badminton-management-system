// <auto-generated />
using System;
using BadmintonCourtManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BadmintonCourtManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250625044552_AddCourtBooking")]
    partial class AddCourtBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalHourBooked")
                        .HasColumnType("float");

                    b.HasKey("BookingID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.Court", b =>
                {
                    b.Property<int>("CourtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourtID"));

                    b.Property<int>("CourtName")
                        .HasColumnType("int");

                    b.Property<int>("CourtStatus")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("CourtID");

                    b.ToTable("Courts");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.CourtBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("CourtId")
                        .HasColumnType("int");

                    b.HasKey("BookingId", "CourtId");

                    b.HasIndex("CourtId");

                    b.ToTable("CourtBooking");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("BookingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("BookingID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.CourtBooking", b =>
                {
                    b.HasOne("BadmintonCourtManagement.Domain.Entity.Booking", "Booking")
                        .WithMany("courtBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BadmintonCourtManagement.Domain.Entity.Court", "Court")
                        .WithMany("courtBookings")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Court");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.User", b =>
                {
                    b.HasOne("BadmintonCourtManagement.Domain.Entity.Booking", null)
                        .WithMany("Users")
                        .HasForeignKey("BookingID");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.Booking", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("courtBookings");
                });

            modelBuilder.Entity("BadmintonCourtManagement.Domain.Entity.Court", b =>
                {
                    b.Navigation("courtBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
